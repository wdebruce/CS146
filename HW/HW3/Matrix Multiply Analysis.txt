Homework 3

MATRIX_MULTIPLY(A, B): 
  if columns(A) ≠ rows(B): 
    raise ValueError("Matrix multiplication is not defined.") 

  rows_A ← number of rows in A 
  cols_A ← number of columns in A 
  cols_B ← number of columns in B 
  result ← matrix of size rows_A x cols_B filled with zeros 

  for i from 1 to rows_A do: 
    for j from 1 to cols_B do: 
    sum ← 0 
      for k from 1 to cols_A do: 
        sum ← sum + A[i][k] * B[k][j] 
      result[i][j] ← sum return result

Explanation:
Time Complexity for Matrix Multiplication is O(n^3).
My initial thoughts is that there is 3 nested loops, so naturally it would be O(n*n*n) or O(n^3).
But to be more specific if Matrix A is size gxn and Matrix B is size nxh. I think of the worst case
where n = g = h, then it yields (n^3).
