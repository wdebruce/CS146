You are a product manager and currently leading a team to develop a new product. 
Unfortunately, the latest version of your product fails the quality check. 
Since each version is developed based on the previous version,
all the versions after a bad version are also bad.

Suppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, 
which causes all the following ones to be bad.

You are given an API bool isBadVersion(version) which returns whether version is bad. 
Implement a function to find the first bad version. 
You should minimize the number of calls to the API.

Hint: There are 2 well-known ways to solve this problem!

Explanation: As given the array is arranged. We can bruteforce our way with O(n). However,
because we know it will arranged in which false and true are split into two separate,
distinct parts of the array, I used binary search to cut down runtime to O(logn).
This reduces runtime by half each iteration therefore yielding O(logn).